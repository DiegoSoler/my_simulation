<?xml version="1.0"?>
<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [waffle, waffle_pi]"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>

  <rosparam file="$(find turtlebot3_manipulation_gazebo)/config/gazebo_controller.yaml" command="load"/>

  <!-- startup simulated world -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">

    <arg name="world_name" value="$(find my_simulation)/worlds/temp-base.world"/>   
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>


  <!-- Inclue ar_track_alvar -->

  <arg name="marker_size" default="15.5" />
    <arg name="max_new_marker_error" default="0.08" />
    <arg name="max_track_error" default="0.08" />
    <arg name="cam_image_topic" default="/camera/rgb/image_raw" />
    <arg name="cam_info_topic" default="/camera/rgb/camera_info" />
    <arg name="output_frame" default="/camera_link" />


<node pkg="tf" type="static_transform_publisher" name="camera_link_camera_frame" args="0 0.0 0 -1.571 0 -1.571   /camera_link  /camera_rgb_optical_frame 100" />

  <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
      <param name="marker_size"           type="double" value="$(arg marker_size)" />
      <param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
      <param name="max_track_error"       type="double" value="$(arg max_track_error)" />
      <param name="output_frame"          type="string" value="$(arg output_frame)" />

      <remap from="camera_image"  to="$(arg cam_image_topic)" />
      <remap from="camera_info"   to="$(arg cam_info_topic)" />
  </node>
  

  <!-- send robot urdf to param server -->
  <include file="$(find insper_garra)/launch/turtlebot3_manipulation_upload.launch">
    <arg name="model" value="$(arg model)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -param robot_description -model robot -x -3.0 -y 4.0 -Y 0.0 -J joint1 0.0 -J joint2 0.0 -J joint3 0.0 -J joint4 0.0 -J gripper 0.0 -J gripper_sub 0.0"/>

  <!-- controller utils -->
  <include file="$(find turtlebot3_manipulation_gazebo)/launch/controller_utils.launch"/>
  
  <!-- arm controller -->
  <rosparam file="$(find turtlebot3_manipulation_gazebo)/config/arm_controller.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn arm_controller"/>

  <!-- gripper controller -->
  <rosparam file="$(find turtlebot3_manipulation_gazebo)/config/gripper_controller.yaml" command="load"/>
  <node name="gripper_controller_spawner" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn gripper_controller"/>

</launch>
